#!/bin/bash

CONFIG_FILE=$1
TIMESTAMP=$(date +'%Y-%m-%d-%H-%M')

if [ "x${1}" = "x" ]; then
        CONFIG_FILE='/etc/jira-backup.conf'
        echo "Defaulting to Jira configuration from: ${CONFIG_FILE}"
fi

if [ -e ${CONFIG_FILE} ]; then
    if source ${CONFIG_FILE}; then
        echo "Read config file succeeded!"
    else
        echo "Error: ${CONFIG_FILE} could not be sourced."
        exit 1
    fi
else
    echo "Error: ${CONFIG_FILE} missing"
    exit 1
fi

ATTACHMENT_BACKUP_OUTPUT="${BACKUP_DIR}/${APP}-attachments-${TIMESTAMP}.tar"
DATABASE_DUMP_OUTPUT="${BACKUP_DIR}/${APP}-database-dump-${TIMESTAMP}.sql"


function setup() {
    if [ ! -d "${BACKUP_DIR}" ]; then
        echo "Creating ${BACKUP_DIR}"
        mkdir -p "${BACKUP_DIR}"
    fi
}

function backup_attachments() {
    echo "Backing up ${APP} attachments"
    /bin/tar -cpf ${ATTACHMENT_BACKUP_OUTPUT} ${ATTACHMENTS_PATH}
    echo "Created ${ATTACHMENT_BACKUP_OUTPUT}"
}

function dump_database() {
    echo "Trying to dump ${APP} database using DBMS ${DB_DBMS}"
    case "$DB_DBMS" in
    'mysql')
        /usr/bin/mysqldump --add-drop-database --host="${DB_HOST}" --user="${DB_USER}" --password="${DB_PASS}" "${DB_NAME}" > "${DATABASE_DUMP_OUTPUT}"
        cmdSuccess=$?
        if [ $cmdSuccess -ne 0 ]; then
            echo "Coudldnt save database. Errorcode: ${cmdSuccess}"
            exit 1
        fi
        ;;
    'postgres')
        /usr/bin/pg_dump -U "${DB_USER}" "${DB_NAME}" -h "${DB_HOST}" > "${DATABASE_DUMP_OUTPUT}"
        cmdSuccess=$?
        if [ $cmdSuccess -ne 0 ]; then
            echo "Coudldnt save database. Errorcode: ${cmdSuccess}"
            exit 1
        fi
        ;;
    *)
        echo "Invalid DBMS! Database CANNOT be saved! Check config file ${CONFIG_FILE}."
        exit 1
        ;;
    esac
    echo "Created ${DATABASE_DUMP_OUTPUT}"
}

function main() {
    echo "Backing up ${APP}"
    setup
    backup_attachments
    dump_database
}

main
